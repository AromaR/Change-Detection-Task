{"ast":null,"code":"var _jsxFileName = \"/Users/alexdhima/react-quiz/src/components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport GameOver from './GameOver';\nimport Pic1A from '../Image 1_original.jpg';\nimport Pic1B from '../image 1_P.jpg';\nimport Pic2A from '../Image 2_original.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuizWindow = styled.div`\n    text-align: center;\n    font-size: clamp(20px, 2.5vw, 24px);\n    margin-top: 15vh;\n`;\n_c = QuizWindow;\nconst checkPopUp = styled.div`\n    top:150px,\n    left:150px, // hide div first\n    width:100px,\n    height:100px,\n`;\nconst Options = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    margin: 2em auto;\n\n    @media screen and (min-width: 1180px) {\n        width: 50%;\n    }\n`;\nconst Option = styled.button`\n    display: block;\n    border: 1px solid #616A94;\n    border-radius: 15px;\n    padding: 15px 30px;\n    text-decoration: none;\n    color: #616A94;\n    background-color: #161A31;\n    transition: 0.3s;\n    font-size: 1em;\n    outline: none;\n    user-select: none;\n    margin-top: 1em;\n    cursor: pointer;\n    \n    @media screen and (min-width: 1180px) {\n        &:hover {\n            color: white;\n            background-color: #616A94;\n        }\n    }\n`;\nconst Question = styled.div`\n    width: 70%;\n    margin: 0 auto;\n`;\nthis.state = {\n  xoffset: 0,\n  yoffset: 0,\n  delta: 10\n};\n\nconst moveTitleToDown = () => {\n  this.setState({\n    yoffset: this.state.yoffset + this.state.delta\n  });\n};\n\nconst moveTitleToRight = () => {\n  this.setState({\n    xoffset: this.state.xoffset + this.state.delta\n  });\n};\n\nconst moveTitleToLeft = () => {\n  this.setState({\n    xoffset: this.state.xoffset - this.state.delta\n  });\n};\n\nconst moveTitleToUp = () => {\n  this.setState({\n    yoffset: this.state.yoffset - this.state.delta\n  });\n};\n\nconst Quiz = () => {\n  _s();\n\n  state = {\n    xoffset: 0,\n    yoffset: 0,\n    delta: 10\n  };\n\n  const moveTitleToDown = () => {\n    this.setState({\n      yoffset: this.state.yoffset + this.state.delta\n    });\n  };\n\n  const moveTitleToRight = () => {\n    this.setState({\n      xoffset: this.state.xoffset + this.state.delta\n    });\n  };\n\n  const moveTitleToLeft = () => {\n    this.setState({\n      xoffset: this.state.xoffset - this.state.delta\n    });\n  };\n\n  const moveTitleToUp = () => {\n    this.setState({\n      yoffset: this.state.yoffset - this.state.delta\n    });\n  };\n\n  const [quiz, setQuiz] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [pts, setPts] = useState([0]);\n  const [correct, setCorrect] = useState(false);\n  const [wrong, setWrong] = useState(false);\n  const [counter, setCounter] = useState(60);\n  const [tieTime, setTieTime] = useState(0);\n  const [pillowTime, setPillowTime] = useState(0);\n  const [topPlantTime, setTopPlantTime] = useState(0);\n  const [rightPlantTime, setRightPlantTime] = useState(0);\n  const [watchTime, setWatchTime] = useState(0);\n  const [bookTime, setBookTime] = useState(0);\n  const [style, setStyle] = useState(`left: 10px;`);\n  useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n  }, [counter]);\n\n  const shuffle = arr => arr.sort(() => Math.random() - 0.5);\n\n  const setCoordinates = (x, y) => {\n    // You don't need whitespace in here, I added it for readability\n    // I would recommend using something like EmotionJS for this\n    return `position: absolute;   \n                    left: ${x}px;         \n                    top: ${y}px;`;\n  };\n\n  const pickAnswer1 = e => {\n    //let userAnswer = e.target.outerText;\n    // if (quiz[number].answer === userAnswer) \n    //console.log(\"X coordinate: \" + e.screenX + \" Y coordinate\" + e.screenY);\n    if (e.screenX >= 222 && e.screenX <= 251 && e.screenY >= 619 && e.screenY <= 703 || e.screenX >= 938 && e.screenX <= 967 && e.screenY >= 619 && e.screenY <= 703) {\n      console.log(\"found tie\");\n      setPts([pts[0] + 1]);\n      setCorrect(true);\n      setTieTime(60 - counter); // const newStyle = setCoordinates(222, 619);\n      // setStyle(newStyle);\n      // console.log(newStyle);\n    } else if (e.screenX >= 368 && e.screenX <= 395 && e.screenY >= 555 && e.screenY <= 589 || e.screenX >= 1084 && e.screenX <= 1111 && e.screenY >= 555 && e.screenY <= 589) {\n      console.log(\"found pillow\");\n      setPts([pts[0] + 1]);\n      setCorrect(true);\n      setPillowTime(60 - counter);\n    } else if (e.screenX >= 401 && e.screenX <= 476 && e.screenY >= 380 && e.screenY <= 445 || e.screenX >= 1117 && e.screenX <= 1192 && e.screenY >= 380 && e.screenY <= 445) {\n      console.log(\"found top plant\");\n      setPts([pts[0] + 1]);\n      setCorrect(true);\n      setTopPlantTime(60 - counter);\n    } else if (e.screenX >= 534 && e.screenX <= 603 && e.screenY >= 457 && e.screenY <= 590 || e.screenX >= 1250 && e.screenX <= 1319 && e.screenY >= 457 && e.screenY <= 590) {\n      console.log(\"found right plant\");\n      setPts([pts[0] + 1]);\n      setCorrect(true);\n      setRightPlantTime(60 - counter);\n    } else if (e.screenX >= 488 && e.screenX <= 501 && e.screenY >= 704 && e.screenY <= 724 || e.screenX >= 1204 && e.screenX <= 1217 && e.screenY >= 704 && e.screenY <= 724) {\n      console.log(\"found watch\");\n      setPts([pts[0] + 1]);\n      setCorrect(true);\n      setWatchTime(60 - counter);\n    } else if (e.screenX >= 168 && e.screenX <= 180 && e.screenY >= 549 && e.screenY <= 572 || e.screenX >= 884 && e.screenX <= 896 && e.screenY >= 549 && e.screenY <= 572) {\n      console.log(\"found book\");\n      setPts([pts[0] + 1]);\n      setCorrect(true);\n      setBookTime(60 - counter);\n    } else {\n      setWrong(true);\n    }\n\n    console.log(\"x: \" + e.screenX + \" y: \" + e.screenY);\n    setTimeout(() => {\n      setCorrect(false);\n    }, 1000);\n    setTimeout(() => {\n      setWrong(false);\n    }, 1000);\n  };\n\n  const pickAnswer2 = e => {\n    //let userAnswer = e.target.outerText;\n    // if (quiz[number].answer === userAnswer) \n    setPts(pts + 1);\n  };\n\n  const regulateSlide = num => {\n    if (num == 1) {}\n\n    setCounter(10);\n    return true;\n  };\n\n  useEffect(() => {// axios.get('https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple')\n    //     .then(res => {\n    //         setQuiz(res.data.results.map(item => (\n    //             {\n    //                 question: item.question,\n    //                 options: shuffle([...item.incorrect_answers, item.correct_answer]),\n    //                 answer: item.correct_answer\n    //             }\n    //         )));\n    //     })\n    //     .catch(err => console.error(err))\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <QuizWindow>\n    //     { quiz[number] &&\n    //         <>\n    //             <Question dangerouslySetInnerHTML={{ __html: quiz[number].question }}></Question>\n    //             <Options>\n    //                 {quiz[number].options.map((item, index) => (\n    //                     <Option key={index} dangerouslySetInnerHTML={{ __html: item }} onClick={pickAnswer}></Option>\n    //                 ))}\n    //             </Options>\n    //         </>\n    //     }\n    //     {\n    //         number === 5 && <GameOver pts={pts} />\n    //     }\n    // </QuizWindow>\n    _jsxDEV(QuizWindow, {\n      children: [pts[0] <= 5 && counter > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" Image 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Spot the Differences! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Pic1A,\n          alt: \"Picture 1A\",\n          height: \"50%\",\n          width: \"50%\",\n          onClick: pickAnswer1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Pic1B,\n          alt: \"Picture 1B\",\n          height: \"50%\",\n          width: \"50%\",\n          onClick: pickAnswer1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), (pts[0] == 6 || counter == 0) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(GameOver, {\n          pts: pts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }, this), tieTime != 0 ? /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\" Time to find tie: \", tieTime, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \" Time to find tie: Not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), pillowTime != 0 ? /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\" Time to find pillow: \", pillowTime, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \" Time to find pillow: Not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this), topPlantTime != 0 ? /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\" Time to find top plant: \", topPlantTime, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \" Time to find plant: Not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this), rightPlantTime != 0 ? /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\" Time to find right plant: \", rightPlantTime, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \" Time to find right plant: Not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this), watchTime != 0 ? /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\" Time to find watch: \", watchTime, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \" Time to find watch: Not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this), bookTime != 0 ? /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\" Time to find book: \", bookTime, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \" Time to find book: Not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), correct && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u2705 Correct!\", /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            position: \"absolute\",\n            left: `${this.state.xoffset}px`,\n            top: `${this.state.yoffset}px`\n          },\n          children: \"GeeksforGeeks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"80px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.moveTitleToRight,\n            children: \"Move Title To Right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.moveTitleToDown,\n            children: \"Move Title To Down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.moveTitleToLeft,\n            children: \"Move Title To Left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.moveTitleToUp,\n            children: \"Move Title To Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this), wrong && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u274C Keep looking!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Quiz, \"pzUA/rs+8cNl3aOtsDEwyH3EnWA=\");\n\n_c2 = Quiz;\nexport default Quiz; //1 minute per image, hidden timer, more precise with seconds\n//check mark for each correct found\n//x mark if wrong click\n//order of click and at what time (since start)\n//restrained area \n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuizWindow\");\n$RefreshReg$(_c2, \"Quiz\");","map":{"version":3,"sources":["/Users/alexdhima/react-quiz/src/components/Quiz.js"],"names":["React","useState","useEffect","styled","axios","GameOver","Pic1A","Pic1B","Pic2A","QuizWindow","div","checkPopUp","Options","Option","button","Question","state","xoffset","yoffset","delta","moveTitleToDown","setState","moveTitleToRight","moveTitleToLeft","moveTitleToUp","Quiz","quiz","setQuiz","number","setNumber","pts","setPts","correct","setCorrect","wrong","setWrong","counter","setCounter","tieTime","setTieTime","pillowTime","setPillowTime","topPlantTime","setTopPlantTime","rightPlantTime","setRightPlantTime","watchTime","setWatchTime","bookTime","setBookTime","style","setStyle","setTimeout","shuffle","arr","sort","Math","random","setCoordinates","x","y","pickAnswer1","e","screenX","screenY","console","log","pickAnswer2","regulateSlide","num","position","left","top","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;;AAEA,MAAMC,UAAU,GAAGN,MAAM,CAACO,GAAI;AAC9B;AACA;AACA;AACA,CAJA;KAAMD,U;AAMN,MAAME,UAAU,GAAGR,MAAM,CAACO,GAAI;AAC9B;AACA;AACA;AACA;AACA,CALA;AAOA,MAAME,OAAO,GAAGT,MAAM,CAACO,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,MAAMG,MAAM,GAAGV,MAAM,CAACW,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBA;AAuBA,MAAMC,QAAQ,GAAGZ,MAAM,CAACO,GAAI;AAC5B;AACA;AACA,CAHA;AAKA,KAAKM,KAAL,GAAa;AACTC,EAAAA,OAAO,EAAE,CADA;AAETC,EAAAA,OAAO,EAAE,CAFA;AAGTC,EAAAA,KAAK,EAAE;AAHE,CAAb;;AAMA,MAAMC,eAAe,GAAG,MAAM;AAC1B,OAAKC,QAAL,CACE;AAAEH,IAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OAAX,GACP,KAAKF,KAAL,CAAWG;AADf,GADF;AAGD,CAJH;;AAKE,MAAMG,gBAAgB,GAAG,MAAM;AAC7B,OAAKD,QAAL,CACE;AAAEJ,IAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GACP,KAAKD,KAAL,CAAWG;AADf,GADF;AAGD,CAJD;;AAKA,MAAMI,eAAe,GAAG,MAAM;AAC5B,OAAKF,QAAL,CACE;AAAEJ,IAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GACP,KAAKD,KAAL,CAAWG;AADf,GADF;AAGD,CAJD;;AAKA,MAAMK,aAAa,GAAG,MAAM;AAC1B,OAAKH,QAAL,CACE;AAAEH,IAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OAAX,GACP,KAAKF,KAAL,CAAWG;AADf,GADF;AAGD,CAJD;;AAMF,MAAMM,IAAI,GAAG,MAAM;AAAA;;AAEfT,EAAAA,KAAK,GAAG;AACJC,IAAAA,OAAO,EAAE,CADL;AAEJC,IAAAA,OAAO,EAAE,CAFL;AAGJC,IAAAA,KAAK,EAAE;AAHH,GAAR;;AAMA,QAAMC,eAAe,GAAG,MAAM;AAC1B,SAAKC,QAAL,CACE;AAAEH,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OAAX,GACP,KAAKF,KAAL,CAAWG;AADf,KADF;AAGD,GAJH;;AAKE,QAAMG,gBAAgB,GAAG,MAAM;AAC7B,SAAKD,QAAL,CACE;AAAEJ,MAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GACP,KAAKD,KAAL,CAAWG;AADf,KADF;AAGD,GAJD;;AAKA,QAAMI,eAAe,GAAG,MAAM;AAC5B,SAAKF,QAAL,CACE;AAAEJ,MAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GACP,KAAKD,KAAL,CAAWG;AADf,KADF;AAGD,GAJD;;AAKA,QAAMK,aAAa,GAAG,MAAM;AAC1B,SAAKH,QAAL,CACE;AAAEH,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OAAX,GACP,KAAKF,KAAL,CAAWG;AADf,KADF;AAGD,GAJD;;AAMF,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC2B,MAAD,EAASC,SAAT,IAAsB5B,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAAC6B,GAAD,EAAMC,MAAN,IAAgB9B,QAAQ,CAAC,CAAC,CAAD,CAAD,CAA9B;AACA,QAAM,CAAC+B,OAAD,EAAUC,UAAV,IAAwBhC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACiC,KAAD,EAAQC,QAAR,IAAoBlC,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACmC,OAAD,EAAUC,UAAV,IAAwBpC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACqC,OAAD,EAAUC,UAAV,IAAwBtC,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACuC,UAAD,EAAaC,aAAb,IAA8BxC,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACyC,YAAD,EAAeC,eAAf,IAAkC1C,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAAC2C,cAAD,EAAiBC,iBAAjB,IAAsC5C,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAAC6C,SAAD,EAAYC,YAAZ,IAA4B9C,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAAC+C,QAAD,EAAWC,WAAX,IAA0BhD,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACiD,KAAD,EAAQC,QAAR,IAAoBlD,QAAQ,CAAE,aAAF,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZkC,IAAAA,OAAO,GAAG,CAAV,IAAegB,UAAU,CAAC,MAAMf,UAAU,CAACD,OAAO,GAAG,CAAX,CAAjB,EAAgC,IAAhC,CAAzB;AACH,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAIA,QAAMiB,OAAO,GAAIC,GAAD,IAASA,GAAG,CAACC,IAAJ,CAAS,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAA/B,CAAzB;;AAEA,QAAMC,cAAc,GAAG,CAACC,CAAD,EAAGC,CAAH,KAAS;AAC5B;AACA;AACI,WAAQ;AACpB,4BAA4BD,CAAE;AAC9B,2BAA2BC,CAAE,KAFjB;AAGP,GAND;;AAQA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AAEvB;AAEA;AACA;AACA,QAAKA,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAA1E,IAAmFF,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAAhK,EAAqK;AACjKC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAnC,MAAAA,MAAM,CAAC,CAACD,GAAG,CAAC,CAAD,CAAH,GAAS,CAAV,CAAD,CAAN;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAM,MAAAA,UAAU,CAAC,KAAGH,OAAJ,CAAV,CAJiK,CAKjK;AACA;AACA;AACH,KARD,MAQM,IAAK0B,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAA1E,IAAmFF,CAAC,CAACC,OAAF,IAAa,IAAb,IAAqBD,CAAC,CAACC,OAAF,IAAa,IAAlC,IAA0CD,CAAC,CAACE,OAAF,IAAa,GAAvD,IAA8DF,CAAC,CAACE,OAAF,IAAa,GAAlK,EAAuK;AACzKC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAnC,MAAAA,MAAM,CAAC,CAACD,GAAG,CAAC,CAAD,CAAH,GAAS,CAAV,CAAD,CAAN;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAQ,MAAAA,aAAa,CAAC,KAAGL,OAAJ,CAAb;AACH,KALK,MAKC,IAAK0B,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAA1E,IAAmFF,CAAC,CAACC,OAAF,IAAa,IAAb,IAAqBD,CAAC,CAACC,OAAF,IAAa,IAAlC,IAA0CD,CAAC,CAACE,OAAF,IAAa,GAAvD,IAA8DF,CAAC,CAACE,OAAF,IAAa,GAAlK,EAAuK;AAC1KC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAnC,MAAAA,MAAM,CAAC,CAACD,GAAG,CAAC,CAAD,CAAH,GAAS,CAAV,CAAD,CAAN;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAU,MAAAA,eAAe,CAAC,KAAGP,OAAJ,CAAf;AACH,KALM,MAKA,IAAK0B,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAA1E,IAAmFF,CAAC,CAACC,OAAF,IAAa,IAAb,IAAqBD,CAAC,CAACC,OAAF,IAAa,IAAlC,IAA0CD,CAAC,CAACE,OAAF,IAAa,GAAvD,IAA8DF,CAAC,CAACE,OAAF,IAAa,GAAlK,EAAuK;AAC1KC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAnC,MAAAA,MAAM,CAAC,CAACD,GAAG,CAAC,CAAD,CAAH,GAAS,CAAV,CAAD,CAAN;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAY,MAAAA,iBAAiB,CAAC,KAAGT,OAAJ,CAAjB;AACH,KALM,MAKA,IAAK0B,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAA1E,IAAmFF,CAAC,CAACC,OAAF,IAAa,IAAb,IAAqBD,CAAC,CAACC,OAAF,IAAa,IAAlC,IAA0CD,CAAC,CAACE,OAAF,IAAa,GAAvD,IAA8DF,CAAC,CAACE,OAAF,IAAa,GAAlK,EAAuK;AAC1KC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAnC,MAAAA,MAAM,CAAC,CAACD,GAAG,CAAC,CAAD,CAAH,GAAS,CAAV,CAAD,CAAN;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAc,MAAAA,YAAY,CAAC,KAAGX,OAAJ,CAAZ;AACH,KALM,MAKA,IAAK0B,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAA1E,IAAmFF,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAAhK,EAAqK;AACxKC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAnC,MAAAA,MAAM,CAAC,CAACD,GAAG,CAAC,CAAD,CAAH,GAAS,CAAV,CAAD,CAAN;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAgB,MAAAA,WAAW,CAAC,KAAGb,OAAJ,CAAX;AACH,KALM,MAKA;AACHD,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACD8B,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAQJ,CAAC,CAACC,OAAV,GAAoB,MAApB,GAA6BD,CAAC,CAACE,OAA3C;AACAZ,IAAAA,UAAU,CAAC,MAAM;AAACnB,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAkB,KAA1B,EAA4B,IAA5B,CAAV;AACAmB,IAAAA,UAAU,CAAC,MAAM;AAACjB,MAAAA,QAAQ,CAAC,KAAD,CAAR;AAAgB,KAAxB,EAA0B,IAA1B,CAAV;AACH,GA7CD;;AA+CA,QAAMgC,WAAW,GAAIL,CAAD,IAAO;AAEvB;AAEA;AACA/B,IAAAA,MAAM,CAACD,GAAG,GAAG,CAAP,CAAN;AACH,GAND;;AAQA,QAAMsC,aAAa,GAAIC,GAAD,IAAS;AAC3B,QAAIA,GAAG,IAAI,CAAX,EAAa,CAEZ;;AACDhC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACA,WAAO,IAAP;AACH,GAND;;AAQAnC,EAAAA,SAAS,CAAC,MAAM,CACZ;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGH,GAhBQ,EAgBN,EAhBM,CAAT;AAmBA;AAAA;AACI;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA,YAAC,UAAD;AAAA,iBAEK4B,GAAG,CAAC,CAAD,CAAH,IAAU,CAAV,IAAeM,OAAO,GAAG,CAAzB,iBACG;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,GAAG,EAAE9B,KAAV;AAAiB,UAAA,GAAG,EAAC,YAArB;AAAkC,UAAA,MAAM,EAAC,KAAzC;AAA+C,UAAA,KAAK,EAAC,KAArD;AAA2D,UAAA,OAAO,EAAEuD;AAApE;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,UAAA,GAAG,EAAEtD,KAAV;AAAiB,UAAA,GAAG,EAAC,YAArB;AAAkC,UAAA,MAAM,EAAC,KAAzC;AAA+C,UAAA,KAAK,EAAC,KAArD;AAA2D,UAAA,OAAO,EAAEsD;AAApE;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,sBAHR,EAkBM,CAAC/B,GAAG,CAAC,CAAD,CAAH,IAAU,CAAV,IAAeM,OAAO,IAAI,CAA3B,kBACE;AAAA,gCACA,QAAC,QAAD;AAAU,UAAA,GAAG,EAAIN;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,EAGCQ,OAAO,IAAI,CAAX,gBACG;AAAA,4CAAwBA,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,gBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,EAQCE,UAAU,IAAI,CAAd,gBACG;AAAA,+CAA2BA,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,gBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,EAaCE,YAAY,IAAI,CAAhB,gBACG;AAAA,kDAA8BA,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,gBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ,EAkBCE,cAAc,IAAI,CAAlB,gBACG;AAAA,oDAAgCA,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,gBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ,EAuBCE,SAAS,IAAI,CAAb,gBACG;AAAA,8CAA0BA,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,gBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BJ,EA4BCE,QAAQ,IAAI,CAAZ,gBACG;AAAA,6CAAyBA,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,gBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BJ;AAAA,sBAnBR,EAsDKhB,OAAO,iBACJ;AAAA,mDAEI;AAAI,UAAA,KAAK,EAAE;AACPsC,YAAAA,QAAQ,EAAE,UADH;AAEPC,YAAAA,IAAI,EAAG,GAAE,KAAKvD,KAAL,CAAWC,OAAQ,IAFrB;AAGPuD,YAAAA,GAAG,EAAG,GAAE,KAAKxD,KAAL,CAAWE,OAAQ;AAHpB,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQI;AAAK,UAAA,KAAK,EAAE;AAAEuD,YAAAA,SAAS,EAAE;AAAb,WAAZ;AAAA,kCACV;AAAQ,YAAA,OAAO,EAAE,KAAKnD,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADU,eAIV;AAAQ,YAAA,OAAO,EAAE,KAAKF,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJU,eAOV;AAAQ,YAAA,OAAO,EAAE,KAAKG,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPU,eAUV;AAAQ,YAAA,OAAO,EAAE,KAAKC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVU;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAvDR,EAgFKU,KAAK,iBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjFR,eAsFQ,qCAtFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAgHH,CA3PD;;GAAMT,I;;MAAAA,I;AA6PN,eAAeA,IAAf,C,CAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport GameOver from './GameOver';\nimport Pic1A from '../Image 1_original.jpg';\nimport Pic1B from '../image 1_P.jpg';\nimport Pic2A from '../Image 2_original.jpg'\n\nconst QuizWindow = styled.div`\n    text-align: center;\n    font-size: clamp(20px, 2.5vw, 24px);\n    margin-top: 15vh;\n`;\n\nconst checkPopUp = styled.div`\n    top:150px,\n    left:150px, // hide div first\n    width:100px,\n    height:100px,\n`;\n\nconst Options = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    margin: 2em auto;\n\n    @media screen and (min-width: 1180px) {\n        width: 50%;\n    }\n`;\n\nconst Option = styled.button`\n    display: block;\n    border: 1px solid #616A94;\n    border-radius: 15px;\n    padding: 15px 30px;\n    text-decoration: none;\n    color: #616A94;\n    background-color: #161A31;\n    transition: 0.3s;\n    font-size: 1em;\n    outline: none;\n    user-select: none;\n    margin-top: 1em;\n    cursor: pointer;\n    \n    @media screen and (min-width: 1180px) {\n        &:hover {\n            color: white;\n            background-color: #616A94;\n        }\n    }\n`;\n\nconst Question = styled.div`\n    width: 70%;\n    margin: 0 auto;\n`;\n\nthis.state = {\n    xoffset: 0,\n    yoffset: 0,\n    delta: 10,\n}\n\nconst moveTitleToDown = () => {\n    this.setState(\n      { yoffset: this.state.yoffset \n        + this.state.delta });\n  };\n  const moveTitleToRight = () => {\n    this.setState(\n      { xoffset: this.state.xoffset \n        + this.state.delta });\n  };\n  const moveTitleToLeft = () => {\n    this.setState(\n      { xoffset: this.state.xoffset \n        - this.state.delta });\n  };\n  const moveTitleToUp = () => {\n    this.setState(\n      { yoffset: this.state.yoffset \n        - this.state.delta });\n  };\n\nconst Quiz = () => {\n\n    state = {\n        xoffset: 0,\n        yoffset: 0,\n        delta: 10,\n    }\n\n    const moveTitleToDown = () => {\n        this.setState(\n          { yoffset: this.state.yoffset \n            + this.state.delta });\n      };\n      const moveTitleToRight = () => {\n        this.setState(\n          { xoffset: this.state.xoffset \n            + this.state.delta });\n      };\n      const moveTitleToLeft = () => {\n        this.setState(\n          { xoffset: this.state.xoffset \n            - this.state.delta });\n      };\n      const moveTitleToUp = () => {\n        this.setState(\n          { yoffset: this.state.yoffset \n            - this.state.delta });\n      };\n\n    const [quiz, setQuiz] = useState([]);\n    const [number, setNumber] = useState(0);\n    const [pts, setPts] = useState([0]);\n    const [correct, setCorrect] = useState(false);\n    const [wrong, setWrong] = useState(false);\n    const [counter, setCounter] = useState(60);\n    const [tieTime, setTieTime] = useState(0);\n    const [pillowTime, setPillowTime] = useState(0);\n    const [topPlantTime, setTopPlantTime] = useState(0);\n    const [rightPlantTime, setRightPlantTime] = useState(0);\n    const [watchTime, setWatchTime] = useState(0);\n    const [bookTime, setBookTime] = useState(0);\n    const [style, setStyle] = useState(`left: 10px;`);\n\n    useEffect(() => {\n        counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n    }, [counter]);\n\n    const shuffle = (arr) => arr.sort(() => Math.random() - 0.5);\n\n    const setCoordinates = (x,y) => {\n        // You don't need whitespace in here, I added it for readability\n        // I would recommend using something like EmotionJS for this\n            return `position: absolute;   \n                    left: ${x}px;         \n                    top: ${y}px;`\n    }\n\n    const pickAnswer1 = (e) => {\n\n        //let userAnswer = e.target.outerText;\n\n        // if (quiz[number].answer === userAnswer) \n        //console.log(\"X coordinate: \" + e.screenX + \" Y coordinate\" + e.screenY);\n        if ((e.screenX >= 222 && e.screenX <= 251 && e.screenY >= 619 && e.screenY <= 703) || (e.screenX >= 938 && e.screenX <= 967 && e.screenY >= 619 && e.screenY <= 703)){\n            console.log(\"found tie\");\n            setPts([pts[0] + 1]);\n            setCorrect(true);\n            setTieTime(60-counter);\n            // const newStyle = setCoordinates(222, 619);\n            // setStyle(newStyle);\n            // console.log(newStyle);\n        }else if ((e.screenX >= 368 && e.screenX <= 395 && e.screenY >= 555 && e.screenY <= 589) || (e.screenX >= 1084 && e.screenX <= 1111 && e.screenY >= 555 && e.screenY <= 589)){\n            console.log(\"found pillow\");\n            setPts([pts[0] + 1]);\n            setCorrect(true);\n            setPillowTime(60-counter);\n        } else if ((e.screenX >= 401 && e.screenX <= 476 && e.screenY >= 380 && e.screenY <= 445) || (e.screenX >= 1117 && e.screenX <= 1192 && e.screenY >= 380 && e.screenY <= 445)){\n            console.log(\"found top plant\");\n            setPts([pts[0] + 1]);\n            setCorrect(true);\n            setTopPlantTime(60-counter);\n        } else if ((e.screenX >= 534 && e.screenX <= 603 && e.screenY >= 457 && e.screenY <= 590) || (e.screenX >= 1250 && e.screenX <= 1319 && e.screenY >= 457 && e.screenY <= 590)){\n            console.log(\"found right plant\");\n            setPts([pts[0] + 1]);\n            setCorrect(true);\n            setRightPlantTime(60-counter);\n        } else if ((e.screenX >= 488 && e.screenX <= 501 && e.screenY >= 704 && e.screenY <= 724) || (e.screenX >= 1204 && e.screenX <= 1217 && e.screenY >= 704 && e.screenY <= 724)){\n            console.log(\"found watch\");\n            setPts([pts[0] + 1]);\n            setCorrect(true);\n            setWatchTime(60-counter);\n        } else if ((e.screenX >= 168 && e.screenX <= 180 && e.screenY >= 549 && e.screenY <= 572) || (e.screenX >= 884 && e.screenX <= 896 && e.screenY >= 549 && e.screenY <= 572)){\n            console.log(\"found book\");\n            setPts([pts[0] + 1]);\n            setCorrect(true);\n            setBookTime(60-counter);\n        } else {\n            setWrong(true);\n        }\n        console.log(\"x: \" + e.screenX + \" y: \" + e.screenY);\n        setTimeout(() => {setCorrect(false)}, 1000);\n        setTimeout(() => {setWrong(false)}, 1000);\n    }\n\n    const pickAnswer2 = (e) => {\n\n        //let userAnswer = e.target.outerText;\n\n        // if (quiz[number].answer === userAnswer) \n        setPts(pts + 1);\n    }\n\n    const regulateSlide = (num) => {\n        if (num == 1){\n\n        }\n        setCounter(10);\n        return true;\n    }\n\n    useEffect(() => {\n        // axios.get('https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple')\n        //     .then(res => {\n        //         setQuiz(res.data.results.map(item => (\n\n        //             {\n        //                 question: item.question,\n        //                 options: shuffle([...item.incorrect_answers, item.correct_answer]),\n        //                 answer: item.correct_answer\n        //             }\n\n        //         )));\n        //     })\n        //     .catch(err => console.error(err))\n        \n\n    }, []);\n\n\n    return (\n        // <QuizWindow>\n        //     { quiz[number] &&\n\n        //         <>\n        //             <Question dangerouslySetInnerHTML={{ __html: quiz[number].question }}></Question>\n\n        //             <Options>\n        //                 {quiz[number].options.map((item, index) => (\n        //                     <Option key={index} dangerouslySetInnerHTML={{ __html: item }} onClick={pickAnswer}></Option>\n        //                 ))}\n        //             </Options>\n        //         </>\n\n        //     }\n        //     {\n        //         number === 5 && <GameOver pts={pts} />\n        //     }\n        // </QuizWindow>\n        <QuizWindow>\n            \n            {pts[0] <= 5 && counter > 0 && \n                <>\n                    <div> Image 1</div>\n                    <h1> Spot the Differences! </h1>\n                    <img src={Pic1A} alt=\"Picture 1A\" height=\"50%\" width=\"50%\" onClick={pickAnswer1} />\n                    <img src={Pic1B} alt=\"Picture 1B\" height=\"50%\" width=\"50%\" onClick={pickAnswer1}/>\n                </>\n            } \n            {/* {((pts > 5 && pts <=10) || (counter < 10 && counter > 0)) &&\n                <>\n                    <div> Timer: {counter}</div>\n                    <h1> Spot the Differences! (2/10) </h1>\n                    <img src={Pic2A} alt=\"Picture 2A\" height=\"50%\" width=\"50%\" onClick={pickAnswer2} />\n                    <img src={Pic2B} alt=\"Picture 2B\" height=\"50%\" width=\"50%\" onClick={pickAnswer2}/>\n                </>\n            }   */}\n            { (pts[0] == 6 || counter == 0) &&  \n                <>\n                <GameOver pts = {pts} />\n                <h1> </h1>\n                {tieTime != 0 ? \n                    <h6> Time to find tie: {tieTime} seconds</h6>\n                : \n                    <h6> Time to find tie: Not found</h6>\n                }\n                {pillowTime != 0 ? \n                    <h6> Time to find pillow: {pillowTime} seconds</h6>\n                :\n                    <h6> Time to find pillow: Not found</h6>\n                }\n                {topPlantTime != 0 ? \n                    <h6> Time to find top plant: {topPlantTime} seconds</h6>\n                :\n                    <h6> Time to find plant: Not found</h6>\n                }\n                {rightPlantTime != 0 ? \n                    <h6> Time to find right plant: {rightPlantTime} seconds</h6>\n                :\n                    <h6> Time to find right plant: Not found</h6>\n                }\n                {watchTime != 0 ? \n                    <h6> Time to find watch: {watchTime} seconds</h6>\n                :\n                    <h6> Time to find watch: Not found</h6>\n                }\n                {bookTime != 0 ? \n                    <h6> Time to find book: {bookTime} seconds</h6>\n                :\n                    <h6> Time to find book: Not found</h6>\n                }\n                </>\n            }\n            {correct &&\n                <div>\n                    ✅ Correct!\n                    <h2 style={{\n                        position: \"absolute\",\n                        left: `${this.state.xoffset}px`,\n                        top: `${this.state.yoffset}px`, }}>\n                        GeeksforGeeks\n                    </h2>\n                    <div style={{ marginTop: \"80px\" }}>\n          <button onClick={this.moveTitleToRight}>\n            Move Title To Right\n          </button>\n          <button onClick={this.moveTitleToDown}>\n            Move Title To Down\n          </button>\n          <button onClick={this.moveTitleToLeft}>\n            Move Title To Left\n          </button>\n          <button onClick={this.moveTitleToUp}>\n            Move Title To Up\n          </button>\n        </div>\n                </div>\n\n            }\n            {wrong &&\n                <div>\n                     ❌ Keep looking!\n                </div>\n            }\n            {\n                <>\n\n                </>\n            }\n        </QuizWindow>\n        \n    )\n}\n\nexport default Quiz\n\n//1 minute per image, hidden timer, more precise with seconds\n//check mark for each correct found\n//x mark if wrong click\n//order of click and at what time (since start)\n//restrained area "]},"metadata":{},"sourceType":"module"}