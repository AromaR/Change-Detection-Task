{"ast":null,"code":"var _jsxFileName = \"/Users/alexdhima/react-quiz/src/components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport GameOver from './GameOver';\nimport Pic1A from '../Image 1_original.jpg';\nimport Pic1B from '../image 1_P.jpg';\nimport Pic2A from '../Image 2 Complete.jpg';\nimport Pic2B from '../Image 2 Complete.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuizWindow = styled.div`\n    text-align: center;\n    font-size: clamp(20px, 2.5vw, 24px);\n    margin-top: 15vh;\n`;\n_c = QuizWindow;\nconst Options = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    margin: 2em auto;\n\n    @media screen and (min-width: 1180px) {\n        width: 50%;\n    }\n`;\nconst Option = styled.button`\n    display: block;\n    border: 1px solid #616A94;\n    border-radius: 15px;\n    padding: 15px 30px;\n    text-decoration: none;\n    color: #616A94;\n    background-color: #161A31;\n    transition: 0.3s;\n    font-size: 1em;\n    outline: none;\n    user-select: none;\n    margin-top: 1em;\n    cursor: pointer;\n    \n    @media screen and (min-width: 1180px) {\n        &:hover {\n            color: white;\n            background-color: #616A94;\n        }\n    }\n`;\nconst Question = styled.div`\n    width: 70%;\n    margin: 0 auto;\n`;\n\nconst Quiz = () => {\n  _s();\n\n  const [quiz, setQuiz] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [pts, setPts] = useState([0]);\n  const [correct, setCorrect] = useState(false);\n  const [wrong, setWrong] = useState(false);\n  const [counter, setCounter] = useState(30); // const [tieTime, setTieTime] = useState(0);\n\n  let tieTime = 0;\n  useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n  }, [counter]);\n\n  const shuffle = arr => arr.sort(() => Math.random() - 0.5);\n\n  const pickAnswer1 = e => {\n    //let userAnswer = e.target.outerText;\n    // if (quiz[number].answer === userAnswer) \n    //console.log(\"X coordinate: \" + e.screenX + \" Y coordinate\" + e.screenY);\n    if (e.screenX >= 135 && e.screenX <= 154 && e.screenY >= 508 && e.screenY <= 558 || e.screenX >= 578 && e.screenX <= 597 && e.screenY >= 508 && e.screenY <= 558) {\n      console.log(\"found tie\");\n      setPts([pts[0] + 1]);\n      setCorrect(true);\n      console.log(counter);\n      tieTime = counter;\n      console.log(tieTime);\n    } else if (e.screenX >= 225 && e.screenX <= 241 && e.screenY >= 470 && e.screenY <= 490 || e.screenX >= 668 && e.screenX <= 684 && e.screenY >= 470 && e.screenY <= 490) {\n      console.log(\"found pillow\");\n      setPts([pts[0] + 1]);\n      setCorrect(true);\n    } else if (e.screenX >= 247 && e.screenX <= 292 && e.screenY >= 361 && e.screenY <= 403 || e.screenX >= 690 && e.screenX <= 735 && e.screenY >= 361 && e.screenY <= 403) {\n      console.log(\"found top plant\");\n      setPts([pts[0] + 1]);\n      setCorrect(true);\n    } else if (e.screenX >= 332 && e.screenX <= 356 && e.screenY >= 412 && e.screenY <= 431 || e.screenX >= 775 && e.screenX <= 799 && e.screenY >= 412 && e.screenY <= 431) {\n      console.log(\"found right plant\");\n      setPts([pts[0] + 1]);\n      setCorrect(true);\n    } else if (e.screenX >= 300 && e.screenX <= 309 && e.screenY >= 562 && e.screenY <= 574 || e.screenX >= 743 && e.screenX <= 752 && e.screenY >= 562 && e.screenY <= 574) {\n      console.log(\"found watch\");\n      setPts([pts[0] + 1]);\n      setCorrect(true);\n    } else if (e.screenX >= 104 && e.screenX <= 111 && e.screenY >= 467 && e.screenY <= 480 || e.screenX >= 547 && e.screenX <= 554 && e.screenY >= 467 && e.screenY <= 480) {\n      console.log(\"found book\");\n      setPts([pts[0] + 1]);\n      setCorrect(true);\n    } else {\n      setWrong(true);\n    } //console.log(pts[0]);\n\n\n    setTimeout(() => {\n      setCorrect(false);\n    }, 1000);\n    setTimeout(() => {\n      setWrong(false);\n    }, 1000);\n  };\n\n  const pickAnswer2 = e => {\n    //let userAnswer = e.target.outerText;\n    // if (quiz[number].answer === userAnswer) \n    setPts(pts + 1);\n  };\n\n  const regulateSlide = num => {\n    if (num == 1) {}\n\n    setCounter(10);\n    return true;\n  };\n\n  useEffect(() => {// axios.get('https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple')\n    //     .then(res => {\n    //         setQuiz(res.data.results.map(item => (\n    //             {\n    //                 question: item.question,\n    //                 options: shuffle([...item.incorrect_answers, item.correct_answer]),\n    //                 answer: item.correct_answer\n    //             }\n    //         )));\n    //     })\n    //     .catch(err => console.error(err))\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <QuizWindow>\n    //     { quiz[number] &&\n    //         <>\n    //             <Question dangerouslySetInnerHTML={{ __html: quiz[number].question }}></Question>\n    //             <Options>\n    //                 {quiz[number].options.map((item, index) => (\n    //                     <Option key={index} dangerouslySetInnerHTML={{ __html: item }} onClick={pickAnswer}></Option>\n    //                 ))}\n    //             </Options>\n    //         </>\n    //     }\n    //     {\n    //         number === 5 && <GameOver pts={pts} />\n    //     }\n    // </QuizWindow>\n    _jsxDEV(QuizWindow, {\n      children: [pts[0] <= 5 && counter > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" Timer: \", counter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Spot the Differences! (1/10) \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Pic1A,\n          alt: \"Picture 1A\",\n          height: \"50%\",\n          width: \"50%\",\n          onClick: pickAnswer1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Pic1B,\n          alt: \"Picture 1B\",\n          height: \"50%\",\n          width: \"50%\",\n          onClick: pickAnswer1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), (pts[0] == 6 || counter == 0) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(GameOver, {\n          pts: pts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this)\n      }, void 0, false), correct && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u2705 Correct!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), wrong && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u274C Keep looking!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Quiz, \"BeZuL86G1iRAJ0UIAXDy5i+wLco=\");\n\n_c2 = Quiz;\nexport default Quiz; //1 minute per image, hidden timer, more precise with seconds\n//check mark for each correct found\n//x mark if wrong click\n//order of click and at what time (since start)\n//restrained area \n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuizWindow\");\n$RefreshReg$(_c2, \"Quiz\");","map":{"version":3,"sources":["/Users/alexdhima/react-quiz/src/components/Quiz.js"],"names":["React","useState","useEffect","styled","axios","GameOver","Pic1A","Pic1B","Pic2A","Pic2B","QuizWindow","div","Options","Option","button","Question","Quiz","quiz","setQuiz","number","setNumber","pts","setPts","correct","setCorrect","wrong","setWrong","counter","setCounter","tieTime","setTimeout","shuffle","arr","sort","Math","random","pickAnswer1","e","screenX","screenY","console","log","pickAnswer2","regulateSlide","num"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;;AAEA,MAAMC,UAAU,GAAGP,MAAM,CAACQ,GAAI;AAC9B;AACA;AACA;AACA,CAJA;KAAMD,U;AAMN,MAAME,OAAO,GAAGT,MAAM,CAACQ,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,MAAME,MAAM,GAAGV,MAAM,CAACW,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBA;AAuBA,MAAMC,QAAQ,GAAGZ,MAAM,CAACQ,GAAI;AAC5B;AACA;AACA,CAHA;;AAKA,MAAMK,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACoB,GAAD,EAAMC,MAAN,IAAgBrB,QAAQ,CAAC,CAAC,CAAD,CAAD,CAA9B;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAAC0B,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,EAAD,CAAtC,CAPe,CAQf;;AACA,MAAI4B,OAAO,GAAG,CAAd;AAEA3B,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,OAAO,GAAG,CAAV,IAAeG,UAAU,CAAC,MAAMF,UAAU,CAACD,OAAO,GAAG,CAAX,CAAjB,EAAgC,IAAhC,CAAzB;AACH,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAIA,QAAMI,OAAO,GAAIC,GAAD,IAASA,GAAG,CAACC,IAAJ,CAAS,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAA/B,CAAzB;;AAGA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AAEvB;AAEA;AACA;AACA,QAAKA,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAA1E,IAAmFF,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAAhK,EAAqK;AACjKC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAnB,MAAAA,MAAM,CAAC,CAACD,GAAG,CAAC,CAAD,CAAH,GAAS,CAAV,CAAD,CAAN;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AACAE,MAAAA,OAAO,GAAGF,OAAV;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACH,KAPD,MAOM,IAAKQ,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAA1E,IAAmFF,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAAhK,EAAqK;AACvKC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAnB,MAAAA,MAAM,CAAC,CAACD,GAAG,CAAC,CAAD,CAAH,GAAS,CAAV,CAAD,CAAN;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAJK,MAIC,IAAKa,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAA1E,IAAmFF,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAAhK,EAAqK;AACxKC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAnB,MAAAA,MAAM,CAAC,CAACD,GAAG,CAAC,CAAD,CAAH,GAAS,CAAV,CAAD,CAAN;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAJM,MAIA,IAAKa,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAA1E,IAAmFF,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAAhK,EAAqK;AACxKC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAnB,MAAAA,MAAM,CAAC,CAACD,GAAG,CAAC,CAAD,CAAH,GAAS,CAAV,CAAD,CAAN;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAJM,MAIA,IAAKa,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAA1E,IAAmFF,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAAhK,EAAqK;AACxKC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAnB,MAAAA,MAAM,CAAC,CAACD,GAAG,CAAC,CAAD,CAAH,GAAS,CAAV,CAAD,CAAN;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAJM,MAIA,IAAKa,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAA1E,IAAmFF,CAAC,CAACC,OAAF,IAAa,GAAb,IAAoBD,CAAC,CAACC,OAAF,IAAa,GAAjC,IAAwCD,CAAC,CAACE,OAAF,IAAa,GAArD,IAA4DF,CAAC,CAACE,OAAF,IAAa,GAAhK,EAAqK;AACxKC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAnB,MAAAA,MAAM,CAAC,CAACD,GAAG,CAAC,CAAD,CAAH,GAAS,CAAV,CAAD,CAAN;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAJM,MAIA;AACHE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAnCsB,CAoCvB;;;AACAI,IAAAA,UAAU,CAAC,MAAM;AAACN,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAkB,KAA1B,EAA4B,IAA5B,CAAV;AACAM,IAAAA,UAAU,CAAC,MAAM;AAACJ,MAAAA,QAAQ,CAAC,KAAD,CAAR;AAAgB,KAAxB,EAA0B,IAA1B,CAAV;AACH,GAvCD;;AAyCA,QAAMgB,WAAW,GAAIL,CAAD,IAAO;AAEvB;AAEA;AACAf,IAAAA,MAAM,CAACD,GAAG,GAAG,CAAP,CAAN;AACH,GAND;;AAQA,QAAMsB,aAAa,GAAIC,GAAD,IAAS;AAC3B,QAAIA,GAAG,IAAI,CAAX,EAAa,CAEZ;;AACDhB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACA,WAAO,IAAP;AACH,GAND;;AAQA1B,EAAAA,SAAS,CAAC,MAAM,CACZ;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGH,GAhBQ,EAgBN,EAhBM,CAAT;AAmBA;AAAA;AACI;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA,YAAC,UAAD;AAAA,iBACKmB,GAAG,CAAC,CAAD,CAAH,IAAU,CAAV,IAAeM,OAAO,GAAG,CAAzB,iBACG;AAAA,gCACI;AAAA,iCAAcA,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,GAAG,EAAErB,KAAV;AAAiB,UAAA,GAAG,EAAC,YAArB;AAAkC,UAAA,MAAM,EAAC,KAAzC;AAA+C,UAAA,KAAK,EAAC,KAArD;AAA2D,UAAA,OAAO,EAAE8B;AAApE;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,UAAA,GAAG,EAAE7B,KAAV;AAAiB,UAAA,GAAG,EAAC,YAArB;AAAkC,UAAA,MAAM,EAAC,KAAzC;AAA+C,UAAA,KAAK,EAAC,KAArD;AAA2D,UAAA,OAAO,EAAE6B;AAApE;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,sBAFR,EAiBM,CAACf,GAAG,CAAC,CAAD,CAAH,IAAU,CAAV,IAAeM,OAAO,IAAI,CAA3B,kBACE;AAAA,+BACA,QAAC,QAAD;AAAU,UAAA,GAAG,EAAIN;AAAjB;AAAA;AAAA;AAAA;AAAA;AADA,uBAlBR,EAsBKE,OAAO,iBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBR,EA2BKE,KAAK,iBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BR,eAiCQ,qCAjCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBJ;AA2DH,CAzJD;;GAAMT,I;;MAAAA,I;AA2JN,eAAeA,IAAf,C,CAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport GameOver from './GameOver';\nimport Pic1A from '../Image 1_original.jpg';\nimport Pic1B from '../image 1_P.jpg';\nimport Pic2A from '../Image 2 Complete.jpg';\nimport Pic2B from '../Image 2 Complete.jpg';\n\nconst QuizWindow = styled.div`\n    text-align: center;\n    font-size: clamp(20px, 2.5vw, 24px);\n    margin-top: 15vh;\n`;\n\nconst Options = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    margin: 2em auto;\n\n    @media screen and (min-width: 1180px) {\n        width: 50%;\n    }\n`;\n\nconst Option = styled.button`\n    display: block;\n    border: 1px solid #616A94;\n    border-radius: 15px;\n    padding: 15px 30px;\n    text-decoration: none;\n    color: #616A94;\n    background-color: #161A31;\n    transition: 0.3s;\n    font-size: 1em;\n    outline: none;\n    user-select: none;\n    margin-top: 1em;\n    cursor: pointer;\n    \n    @media screen and (min-width: 1180px) {\n        &:hover {\n            color: white;\n            background-color: #616A94;\n        }\n    }\n`;\n\nconst Question = styled.div`\n    width: 70%;\n    margin: 0 auto;\n`;\n\nconst Quiz = () => {\n\n    const [quiz, setQuiz] = useState([]);\n    const [number, setNumber] = useState(0);\n    const [pts, setPts] = useState([0]);\n    const [correct, setCorrect] = useState(false);\n    const [wrong, setWrong] = useState(false);\n    const [counter, setCounter] = useState(30);\n    // const [tieTime, setTieTime] = useState(0);\n    let tieTime = 0;\n\n    useEffect(() => {\n        counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n    }, [counter]);\n\n    const shuffle = (arr) => arr.sort(() => Math.random() - 0.5);\n\n\n    const pickAnswer1 = (e) => {\n\n        //let userAnswer = e.target.outerText;\n\n        // if (quiz[number].answer === userAnswer) \n        //console.log(\"X coordinate: \" + e.screenX + \" Y coordinate\" + e.screenY);\n        if ((e.screenX >= 135 && e.screenX <= 154 && e.screenY >= 508 && e.screenY <= 558) || (e.screenX >= 578 && e.screenX <= 597 && e.screenY >= 508 && e.screenY <= 558)){\n            console.log(\"found tie\");\n            setPts([pts[0] + 1]);\n            setCorrect(true);\n            console.log(counter);\n            tieTime = counter;\n            console.log(tieTime);\n        }else if ((e.screenX >= 225 && e.screenX <= 241 && e.screenY >= 470 && e.screenY <= 490) || (e.screenX >= 668 && e.screenX <= 684 && e.screenY >= 470 && e.screenY <= 490)){\n            console.log(\"found pillow\");\n            setPts([pts[0] + 1]);\n            setCorrect(true);\n        } else if ((e.screenX >= 247 && e.screenX <= 292 && e.screenY >= 361 && e.screenY <= 403) || (e.screenX >= 690 && e.screenX <= 735 && e.screenY >= 361 && e.screenY <= 403)){\n            console.log(\"found top plant\");\n            setPts([pts[0] + 1]);\n            setCorrect(true);\n        } else if ((e.screenX >= 332 && e.screenX <= 356 && e.screenY >= 412 && e.screenY <= 431) || (e.screenX >= 775 && e.screenX <= 799 && e.screenY >= 412 && e.screenY <= 431)){\n            console.log(\"found right plant\");\n            setPts([pts[0] + 1]);\n            setCorrect(true);\n        } else if ((e.screenX >= 300 && e.screenX <= 309 && e.screenY >= 562 && e.screenY <= 574) || (e.screenX >= 743 && e.screenX <= 752 && e.screenY >= 562 && e.screenY <= 574)){\n            console.log(\"found watch\");\n            setPts([pts[0] + 1]);\n            setCorrect(true);\n        } else if ((e.screenX >= 104 && e.screenX <= 111 && e.screenY >= 467 && e.screenY <= 480) || (e.screenX >= 547 && e.screenX <= 554 && e.screenY >= 467 && e.screenY <= 480)){\n            console.log(\"found book\");\n            setPts([pts[0] + 1]);\n            setCorrect(true);\n        } else {\n            setWrong(true);\n        }\n        //console.log(pts[0]);\n        setTimeout(() => {setCorrect(false)}, 1000);\n        setTimeout(() => {setWrong(false)}, 1000);\n    }\n\n    const pickAnswer2 = (e) => {\n\n        //let userAnswer = e.target.outerText;\n\n        // if (quiz[number].answer === userAnswer) \n        setPts(pts + 1);\n    }\n\n    const regulateSlide = (num) => {\n        if (num == 1){\n\n        }\n        setCounter(10);\n        return true;\n    }\n\n    useEffect(() => {\n        // axios.get('https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple')\n        //     .then(res => {\n        //         setQuiz(res.data.results.map(item => (\n\n        //             {\n        //                 question: item.question,\n        //                 options: shuffle([...item.incorrect_answers, item.correct_answer]),\n        //                 answer: item.correct_answer\n        //             }\n\n        //         )));\n        //     })\n        //     .catch(err => console.error(err))\n        \n\n    }, []);\n\n\n    return (\n        // <QuizWindow>\n        //     { quiz[number] &&\n\n        //         <>\n        //             <Question dangerouslySetInnerHTML={{ __html: quiz[number].question }}></Question>\n\n        //             <Options>\n        //                 {quiz[number].options.map((item, index) => (\n        //                     <Option key={index} dangerouslySetInnerHTML={{ __html: item }} onClick={pickAnswer}></Option>\n        //                 ))}\n        //             </Options>\n        //         </>\n\n        //     }\n        //     {\n        //         number === 5 && <GameOver pts={pts} />\n        //     }\n        // </QuizWindow>\n        <QuizWindow>\n            {pts[0] <= 5 && counter > 0 && \n                <>\n                    <div> Timer: {counter}</div>\n                    <h1> Spot the Differences! (1/10) </h1>\n                    <img src={Pic1A} alt=\"Picture 1A\" height=\"50%\" width=\"50%\" onClick={pickAnswer1} />\n                    <img src={Pic1B} alt=\"Picture 1B\" height=\"50%\" width=\"50%\" onClick={pickAnswer1}/>\n                </>\n            } \n            {/* {((pts > 5 && pts <=10) || (counter < 10 && counter > 0)) &&\n                <>\n                    <div> Timer: {counter}</div>\n                    <h1> Spot the Differences! (2/10) </h1>\n                    <img src={Pic2A} alt=\"Picture 2A\" height=\"50%\" width=\"50%\" onClick={pickAnswer2} />\n                    <img src={Pic2B} alt=\"Picture 2B\" height=\"50%\" width=\"50%\" onClick={pickAnswer2}/>\n                </>\n            }   */}\n            { (pts[0] == 6 || counter == 0) &&  \n                <>\n                <GameOver pts = {pts} />\n                </>\n            }\n            {correct &&\n                <div>\n                    ✅ Correct! \n                </div>\n            }\n            {wrong &&\n                <div>\n                     ❌ Keep looking!\n                </div>\n            }\n            {\n                <>\n\n                </>\n            }\n        </QuizWindow>\n        \n    )\n}\n\nexport default Quiz\n\n//1 minute per image, hidden timer, more precise with seconds\n//check mark for each correct found\n//x mark if wrong click\n//order of click and at what time (since start)\n//restrained area "]},"metadata":{},"sourceType":"module"}