{"ast":null,"code":"var _jsxFileName = \"/Users/alexdhima/react-quiz/src/components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport GameOver from './GameOver';\nimport Pic1A from '../Image 1_original.jpg';\nimport Pic1B from '../image 1_P.jpg';\nimport Pic2A from '../Image 2 Complete.jpg';\nimport Pic2B from '../Image 2 Complete.jpg';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizWindow = styled.div`\n    text-align: center;\n    font-size: clamp(20px, 2.5vw, 24px);\n    margin-top: 15vh;\n`;\n_c = QuizWindow;\nconst Options = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    margin: 2em auto;\n\n    @media screen and (min-width: 1180px) {\n        width: 50%;\n    }\n`;\nconst Option = styled.button`\n    display: block;\n    border: 1px solid #616A94;\n    border-radius: 15px;\n    padding: 15px 30px;\n    text-decoration: none;\n    color: #616A94;\n    background-color: #161A31;\n    transition: 0.3s;\n    font-size: 1em;\n    outline: none;\n    user-select: none;\n    margin-top: 1em;\n    cursor: pointer;\n    \n    @media screen and (min-width: 1180px) {\n        &:hover {\n            color: white;\n            background-color: #616A94;\n        }\n    }\n`;\nconst Question = styled.div`\n    width: 70%;\n    margin: 0 auto;\n`;\n\nconst Quiz = () => {\n  _s();\n\n  const [quiz, setQuiz] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [pts, setPts] = useState(1);\n  const [counter, setCounter] = React.useState(120);\n  React.useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n  }, [counter]);\n\n  const shuffle = arr => arr.sort(() => Math.random() - 0.5);\n\n  const pickAnswer1 = e => {\n    //let userAnswer = e.target.outerText;\n    // if (quiz[number].answer === userAnswer) \n    console.log(\"X coordinate: \" + e.screenX + \" Y coordinate\" + e.screenY);\n\n    if (e.screenX >= 135 && e.screenX <= 154 && e.screenY >= 508 && e.screenY <= 558 || e.screenX >= 578 && e.screenX <= 597 && e.screenY >= 508 && e.screenY <= 558) {\n      console.log(\"found tie\");\n    }\n\n    if (e.screenX >= 225 && e.screenX <= 241 && e.screenY >= 470 && e.screenY <= 490 || e.screenX >= 668 && e.screenX <= 684 && e.screenY >= 470 && e.screenY <= 490) {\n      console.log(\"found pillow\");\n    }\n\n    if (e.screenX >= 247 && e.screenX <= 292 && e.screenY >= 361 && e.screenY <= 403 || e.screenX >= 690 && e.screenX <= 597 && e.screenY >= 361 && e.screenY <= 403) {\n      console.log(\"found plant\");\n    }\n\n    if (e.screenX >= 300 && e.screenX <= 309 && e.screenY >= 562 && e.screenY <= 574 || e.screenX >= 578 && e.screenX <= 597 && e.screenY >= 508 && e.screenY <= 558) {\n      console.log(\"found watch\");\n    }\n\n    if (e.screenX >= 104 && e.screenX <= 111 && e.screenY >= 467 && e.screenY <= 480 || e.screenX >= 578 && e.screenX <= 597 && e.screenY >= 508 && e.screenY <= 558) {\n      console.log(\"found book\");\n    }\n  };\n\n  const pickAnswer2 = e => {\n    //let userAnswer = e.target.outerText;\n    // if (quiz[number].answer === userAnswer) \n    if (e.screenX == 0) {}\n  };\n\n  const regulateSlide = num => {\n    if (num == 1) {}\n\n    setCounter(10);\n    return true;\n  };\n\n  useEffect(() => {// axios.get('https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple')\n    //     .then(res => {\n    //         setQuiz(res.data.results.map(item => (\n    //             {\n    //                 question: item.question,\n    //                 options: shuffle([...item.incorrect_answers, item.correct_answer]),\n    //                 answer: item.correct_answer\n    //             }\n    //         )));\n    //     })\n    //     .catch(err => console.error(err))\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <QuizWindow>\n    //     { quiz[number] &&\n    //         <>\n    //             <Question dangerouslySetInnerHTML={{ __html: quiz[number].question }}></Question>\n    //             <Options>\n    //                 {quiz[number].options.map((item, index) => (\n    //                     <Option key={index} dangerouslySetInnerHTML={{ __html: item }} onClick={pickAnswer}></Option>\n    //                 ))}\n    //             </Options>\n    //         </>\n    //     }\n    //     {\n    //         number === 5 && <GameOver pts={pts} />\n    //     }\n    // </QuizWindow>\n    _jsxDEV(QuizWindow, {\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), pts <= 5 && counter >= 10 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" Timer: \", counter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Spot the Differences! (1/10) \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Pic1A,\n          alt: \"Picture 1A\",\n          height: \"50%\",\n          width: \"50%\",\n          onClick: pickAnswer1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Pic1B,\n          alt: \"Picture 1B\",\n          height: \"50%\",\n          width: \"50%\",\n          onClick: pickAnswer1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), (pts > 5 && pts < 10 || counter < 10 && counter > 0) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" Timer: \", counter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Spot the Differences! (2/10) \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Pic2A,\n          alt: \"Picture 2A\",\n          height: \"50%\",\n          width: \"50%\",\n          onClick: pickAnswer2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Pic2B,\n          alt: \"Picture 2B\",\n          height: \"50%\",\n          width: \"50%\",\n          onClick: pickAnswer2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), (pts == 10 || counter == 0) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(GameOver, {\n          pts: pts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Quiz, \"vVXr5Af/7b82N3kZhC7ObONpEVY=\");\n\n_c2 = Quiz;\nexport default Quiz; //1 minute per image, hidden timer, more precise with seconds\n//check mark for each correct found\n//x mark if wrong click\n//order of click and at what time (since start)\n//restrained area \n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuizWindow\");\n$RefreshReg$(_c2, \"Quiz\");","map":{"version":3,"sources":["/Users/alexdhima/react-quiz/src/components/Quiz.js"],"names":["React","useState","useEffect","styled","axios","GameOver","Pic1A","Pic1B","Pic2A","Pic2B","QuizWindow","div","Options","Option","button","Question","Quiz","quiz","setQuiz","number","setNumber","pts","setPts","counter","setCounter","setTimeout","shuffle","arr","sort","Math","random","pickAnswer1","e","console","log","screenX","screenY","pickAnswer2","regulateSlide","num"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport GameOver from './GameOver';\nimport Pic1A from '../Image 1_original.jpg';\nimport Pic1B from '../image 1_P.jpg';\nimport Pic2A from '../Image 2 Complete.jpg';\nimport Pic2B from '../Image 2 Complete.jpg';\n\nconst QuizWindow = styled.div`\n    text-align: center;\n    font-size: clamp(20px, 2.5vw, 24px);\n    margin-top: 15vh;\n`;\n\nconst Options = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    margin: 2em auto;\n\n    @media screen and (min-width: 1180px) {\n        width: 50%;\n    }\n`;\n\nconst Option = styled.button`\n    display: block;\n    border: 1px solid #616A94;\n    border-radius: 15px;\n    padding: 15px 30px;\n    text-decoration: none;\n    color: #616A94;\n    background-color: #161A31;\n    transition: 0.3s;\n    font-size: 1em;\n    outline: none;\n    user-select: none;\n    margin-top: 1em;\n    cursor: pointer;\n    \n    @media screen and (min-width: 1180px) {\n        &:hover {\n            color: white;\n            background-color: #616A94;\n        }\n    }\n`;\n\nconst Question = styled.div`\n    width: 70%;\n    margin: 0 auto;\n`;\n\nconst Quiz = () => {\n\n    const [quiz, setQuiz] = useState([]);\n    const [number, setNumber] = useState(0);\n    const [pts, setPts] = useState(1);\n\n    const [counter, setCounter] = React.useState(120);\n\n  React.useEffect(() => {\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n  }, [counter]);\n\n    const shuffle = (arr) => arr.sort(() => Math.random() - 0.5);\n\n\n    const pickAnswer1 = (e) => {\n\n        //let userAnswer = e.target.outerText;\n\n        // if (quiz[number].answer === userAnswer) \n        console.log(\"X coordinate: \" + e.screenX + \" Y coordinate\" + e.screenY);\n        if ((e.screenX >= 135 && e.screenX <= 154 && e.screenY >= 508 && e.screenY <= 558) || (e.screenX >= 578 && e.screenX <= 597 && e.screenY >= 508 && e.screenY <= 558)){\n            console.log(\"found tie\");\n        }\n        if ((e.screenX >= 225 && e.screenX <= 241 && e.screenY >= 470 && e.screenY <= 490) || (e.screenX >= 668 && e.screenX <= 684 && e.screenY >= 470 && e.screenY <= 490)){\n            console.log(\"found pillow\");\n        }\n        if ((e.screenX >= 247 && e.screenX <= 292 && e.screenY >= 361 && e.screenY <= 403) || (e.screenX >= 690 && e.screenX <= 597 && e.screenY >= 361 && e.screenY <= 403)){\n            console.log(\"found plant\");\n        }\n        if ((e.screenX >= 300 && e.screenX <= 309 && e.screenY >= 562 && e.screenY <= 574) || (e.screenX >= 578 && e.screenX <= 597 && e.screenY >= 508 && e.screenY <= 558)){\n            console.log(\"found watch\");\n        }\n        if ((e.screenX >= 104 && e.screenX <= 111 && e.screenY >= 467 && e.screenY <= 480) || (e.screenX >= 578 && e.screenX <= 597 && e.screenY >= 508 && e.screenY <= 558)){\n            console.log(\"found book\");\n        }\n        \n    }\n\n    const pickAnswer2 = (e) => {\n\n        //let userAnswer = e.target.outerText;\n\n        // if (quiz[number].answer === userAnswer) \n        if (e.screenX == 0){\n\n        }\n    }\n\n    const regulateSlide = (num) => {\n        if (num == 1){\n\n        }\n        setCounter(10);\n        return true;\n    }\n\n    useEffect(() => {\n        // axios.get('https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple')\n        //     .then(res => {\n        //         setQuiz(res.data.results.map(item => (\n\n        //             {\n        //                 question: item.question,\n        //                 options: shuffle([...item.incorrect_answers, item.correct_answer]),\n        //                 answer: item.correct_answer\n        //             }\n\n        //         )));\n        //     })\n        //     .catch(err => console.error(err))\n        \n\n    }, []);\n\n\n    return (\n        // <QuizWindow>\n        //     { quiz[number] &&\n\n        //         <>\n        //             <Question dangerouslySetInnerHTML={{ __html: quiz[number].question }}></Question>\n\n        //             <Options>\n        //                 {quiz[number].options.map((item, index) => (\n        //                     <Option key={index} dangerouslySetInnerHTML={{ __html: item }} onClick={pickAnswer}></Option>\n        //                 ))}\n        //             </Options>\n        //         </>\n\n        //     }\n        //     {\n        //         number === 5 && <GameOver pts={pts} />\n        //     }\n        // </QuizWindow>\n        <QuizWindow>\n            {\n                <>\n\n                </>\n            }\n            {pts <= 5 && counter >= 10 && \n                <>\n                    <div> Timer: {counter}</div>\n                    <h1> Spot the Differences! (1/10) </h1>\n                    <img src={Pic1A} alt=\"Picture 1A\" height=\"50%\" width=\"50%\" onClick={pickAnswer1} />\n                    <img src={Pic1B} alt=\"Picture 1B\" height=\"50%\" width=\"50%\" onClick={pickAnswer1}/>\n                </>\n            } \n            {((pts > 5 && pts < 10) || (counter < 10 && counter > 0)) &&\n                <>\n                    <div> Timer: {counter}</div>\n                    <h1> Spot the Differences! (2/10) </h1>\n                    <img src={Pic2A} alt=\"Picture 2A\" height=\"50%\" width=\"50%\" onClick={pickAnswer2} />\n                    <img src={Pic2B} alt=\"Picture 2B\" height=\"50%\" width=\"50%\" onClick={pickAnswer2}/>\n                </>\n            }  \n            { (pts == 10 || counter == 0) &&  \n                <>\n                <GameOver pts = {pts} />\n                </>\n            }\n        </QuizWindow>\n        \n    )\n}\n\nexport default Quiz\n\n//1 minute per image, hidden timer, more precise with seconds\n//check mark for each correct found\n//x mark if wrong click\n//order of click and at what time (since start)\n//restrained area "]},"metadata":{},"sourceType":"module"}